
./Setup.hs,15
main main1,2

./test/HStore/PostgresOpsSpec.hs,256
module HStore.PostgresOpsSpecHStore.PostgresOpsSpec9,10
newtype Added Added30,31
instance Arbitrary Arbitrary Added34,35
  arbitrary arbitrary35,36
instance Versionable Versionable Added37,38
withPGDatabase withPGDatabase39,40
spec spec81,82

./test/Spec.hs,0

./src/HStore.hs,1013
module HStore HStore3,4
newtype Revision Revision14,15
newtype Revision = Revision {revision revision14,15
newtype Version Version25,26
newtype Version = Version {version version25,26
defaultVersion defaultVersion28,29
class (ToJSON s, FromJSON s) => Versionable Versionable35,36
  write write38,39
  read read45,46
class Store Store50,51
  store store51,52
  load load62,63
data StoreError StoreError75,76
data StoreError = StoreError StoreError75,76
data StoreError = StoreError {errorReason errorReason75,76
  | InvalidRevision InvalidRevision76,77
  | InvalidRevision { requested requested76,77
  | InvalidRevision { requested :: Revision, actual actual76,77
data StoreResultStoreResult79,80
  = StoreSuccess StoreSuccess80,81
  = StoreSuccess {lastRevision lastRevision80,81
  | StoreFailure StoreFailure81,82
data LoadResult LoadResult84,85
  = LoadSuccess LoadSuccess85,86
  = LoadSuccess {loadedEvents loadedEvents85,86
  | LoadFailure LoadFailure86,87

./src/HStore/PostgresOps/Migrate.hs,400
module HStore.PostgresOps.MigrateHStore.PostgresOps.Migrate9,10
createDb, createUser, grantRights grantRights23,24
createDb, createUser,createUser23,24
createDb,createDb23,24
createUser createUser25,26
grantRights grantRights26,27
makeDb makeDb28,29
createTable createTable35,36
migrations migrations41,42
createDatabase createDatabase49,50
migrateDatabase migrateDatabase60,61

./src/HStore/PostgresOps/Types.hs,661
module HStore.PostgresOps.Types HStore.PostgresOps.Types0,1
data PostgresStoragePostgresStorage7,8
  = PostgresStoragePostgresStorage8,9
      { dbConnectInfo dbConnectInfo9,10
        dbConnection dbConnection10,11
        dbVersion dbVersion11,12
        dbRevision dbRevision12,13
data PGStorageOptionsPGStorageOptions16,17
  = PGStorageOptionsPGStorageOptions17,18
        dbName dbName19,20
        dbUser dbUser21,22
        dbPassword dbPassword23,24
        dbHost dbHost25,26
        dbPort dbPort27,28
        storageVersion storageVersion31,32
defaultOptions defaultOptions34,35
makeConnectInfo makeConnectInfo37,38

./src/HStore/PostgresOps.hs,1736
module HStore.PostgresOpsHStore.PostgresOps8,9
newtype SHA1 SHA140,41
newtype SHA1 = SHA1 {unSha1 unSha140,41
defaultSha1 defaultSha142,43
data StoredEvent StoredEvent46,47
  = StoredEventStoredEvent47,48
        eventVersion eventVersion49,50
        eventDate eventDate51,52
        eventSHA1 eventSHA153,54
        event event55,56
instance Show Show s => Show (StoredEvent s)58,59
  show show59,60
instance Eq Eq s => Eq (StoredEvent s)61,62
  (S(StoredEventvdsev)62,63
data PGStorageError PGStorageError64,65
data PGStorageError = PGStorageError PGStorageError64,65
data PGStorageError = PGStorageError {_reason _reason64,65
maxRevision maxRevision67,68
openPostgresStorage openPostgresStorage70,71
closePostgresStorage closePostgresStorage80,81
withPostgresStorage withPostgresStorage88,89
mkEvent mkEvent99,100
instance ToField ToField Version109,110
  toField toField110,111
instance FromField FromField Version112,113
  fromField fromField113,114
instance ToField ToField SHA1115,116
  toField toField116,117
instance FromField FromField SHA1118,119
  fromField fromField119,120
instance (T(ToJSON e) => ToRow (StoredEvent e)121,122
  toRow toRow122,123
instance FromRow FromRow (StoredEvent Value)124,125
  fromRow fromRow125,126
instance FromField FromField Word64128,129
  fromField fromField129,130
instance FromRow FromRow Revision131,132
  fromRow fromRow132,133
insertEvent insertEvent136,137
writeToDB writeToDB140,141
selectAllEvents selectAllEvents161,162
parseEvent parseEvent164,165
readFromDB readFromDB171,172
instance (M(MonadIO m, MonadCatch m) => Store m PostgresStorage187,188
  store store188,189
  load load189,190

./src/HStore/Events.hs,493
module HStore.Events HStore.Events6,7
newtype SHA1 SHA112,13
newtype SHA1 = SHA1 {unSha1 unSha112,13
defaultSha1 defaultSha114,15
data StoredEvent StoredEvent18,19
  = StoredEventStoredEvent19,20
        eventVersion eventVersion21,22
        eventDate eventDate23,24
        eventSHA1 eventSHA125,26
        event event27,28
instance Show Show s => Show (StoredEvent s)30,31
  show show31,32
instance Eq Eq s => Eq (StoredEvent s)33,34
  (S(StoredEventvdsev)34,35
